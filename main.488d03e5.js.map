{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","allRows","rows","minAge","maxAge","sortingColumns","e","updatedAllRows","sortCallback","sortAscending","sortByColumn","target","innerText","tableDataToSort","i","length","cells","person","Name","Position","Office","Age","Salary","push","dataset","clicked","clickedTitle","a","b","toNumberA","match","join","localeCompare","sort","result","tableRow","innerHTML","addEventListener","tableBody","selectRow","activatedRow","find","el","className","pressedRow","parentElement","body","form","createElement","input","label","name","toLocaleLowerCase","qa","type","setAttribute","append","nameInput","positionInput","officeInput","ageInput","salaryInput","officeSelect","cities","option","text","appendChild","replaceWith","button","pushNotification","message","block","titleBlock","messageBlock","classList","add","toUpperCase","slice","style","top","right","setTimeout","remove","buttonHandler","preventDefault","newPerosn","value","Number","toLocaleString","newRow","key","newTd","trim","reset","editCells","cellIndex","originalText","newInput","newSelect","cellInput","width","focus","cellEditHandler","cellInputValue","includes","blur","onblur","onkeydown","eve"],"mappings":"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","file":"main.488d03e5.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst allRows = [...document.querySelector('table').rows];\nconst minAge = 18;\nconst maxAge = 90;\n\nconst sortingColumns = (e) => {\n  const updatedAllRows = [...document.querySelector('table').rows];\n  const sortByColumn = e.target.innerText;\n  const tableDataToSort = [];\n\n  for (let i = 1; i < updatedAllRows.length - 1; i++) {\n    const cells = updatedAllRows[i].cells;\n    const person = {\n      Name: cells[0].innerText,\n      Position: cells[1].innerText,\n      Office: cells[2].innerText,\n      Age: cells[3].innerText,\n      Salary: cells[4].innerText,\n    };\n\n    tableDataToSort.push(person);\n  }\n\n  let sortCallback;\n  let sortAscending;\n\n  if (e.target.dataset.clicked === 'true') {\n    sortAscending = false;\n  } else {\n    const clickedTitle = document.querySelector('[data-clicked=\"true\"]');\n\n    if (clickedTitle) {\n      clickedTitle.dataset.clicked = false;\n    }\n    sortAscending = true;\n  }\n\n  switch (sortByColumn) {\n    case 'Salary':\n      sortCallback = (a, b) => {\n        const toNumberA = a.Salary.match(/\\d+/g).join('');\n        const toNumberB = b.Salary.match(/\\d+/g).join('');\n\n        return toNumberA - toNumberB;\n      };\n      break;\n    default:\n      sortCallback = (a, b) => a[sortByColumn].localeCompare(b[sortByColumn]);\n      break;\n  }\n\n  tableDataToSort.sort((a, b) => {\n    const result = sortCallback(a, b);\n\n    return sortAscending ? result : -result;\n  });\n\n  for (let i = 1; i < updatedAllRows.length - 1; i++) {\n    const tableRow = updatedAllRows[i];\n    const { Name, Position, Office, Age, Salary } = tableDataToSort[i - 1];\n\n    tableRow.innerHTML = `\n      <td>${Name}</td>\n      <td>${Position}</td>\n      <td>${Office}</td>\n      <td>${Age}</td>\n      <td>${Salary}</td>\n    `;\n  }\n\n  e.target.dataset.clicked = sortAscending ? 'true' : 'false';\n};\n\ntableHead.addEventListener('click', sortingColumns);\n\nconst tableBody = document.querySelector('tbody');\n\nconst selectRow = (e) => {\n  const activatedRow = allRows.find(el => el.className === 'active');\n  const pressedRow = e.target.parentElement;\n\n  if (pressedRow.className) {\n    pressedRow.className = '';\n\n    return;\n  }\n\n  if (activatedRow) {\n    activatedRow.className = '';\n  }\n\n  pressedRow.className = 'active';\n};\n\ntableBody.addEventListener('click', selectRow);\n\nconst body = document.body;\nconst form = document.createElement('form');\n\nfor (let i = 0; i < 5; i++) {\n  const input = document.createElement('input');\n  const label = document.createElement('label');\n\n  input.name = allRows[0].cells[i].innerText.toLocaleLowerCase();\n  input.dataset.qa = allRows[0].cells[i].innerText.toLocaleLowerCase();\n  input.type = 'text';\n  input.setAttribute('required', true);\n\n  label.innerText = allRows[0].cells[i].innerText;\n  label.append(input);\n  form.append(label);\n}\n\nform.className = 'new-employee-form';\nbody.append(form);\n\nconst nameInput = document.querySelector('[data-qa=\"name\"]');\nconst positionInput = document.querySelector('[data-qa=\"position\"]');\nconst officeInput = document.querySelector('input[name=\"office\"]');\nconst ageInput = document.querySelector('[data-qa=\"age\"]');\nconst salaryInput = document.querySelector('[data-qa=\"salary\"]');\n\nageInput.type = 'number';\nsalaryInput.type = 'number';\n\nconst officeSelect = document.createElement('select');\n\nconst cities = ['Tokyo', 'Singapore', 'London', 'New York',\n  'Edinburgh', 'San Francisco'];\n\nfor (let i = 0; i < cities.length; i++) {\n  const option = document.createElement('option');\n\n  option.text = cities[i];\n  officeSelect.appendChild(option);\n}\n\nofficeSelect.name = allRows[0].cells[2].innerText.toLocaleLowerCase();\nofficeSelect.dataset.qa = allRows[0].cells[2].innerText.toLocaleLowerCase();\n\nofficeInput.replaceWith(officeSelect);\n\nconst button = document.createElement('button');\n\nbutton.innerText = 'Save to table';\nform.append(button);\n\nconst pushNotification = (type, message) => {\n  const block = document.createElement('div');\n  const titleBlock = document.createElement('h2');\n  const messageBlock = document.createElement('p');\n\n  block.classList.add('notification', type);\n  block.dataset.qa = 'notification';\n\n  titleBlock.className = 'title';\n  titleBlock.innerText = `${type[0].toUpperCase() + type.slice(1)}`;\n\n  messageBlock.innerText = message;\n\n  block.append(titleBlock);\n  block.append(messageBlock);\n\n  block.style.top = `0px`;\n  block.style.right = `0px`;\n\n  const parentElement = document.querySelector('body');\n\n  parentElement.append(block);\n\n  setTimeout(() => {\n    block.remove();\n  }, 2000);\n};\n\nconst buttonHandler = (e) => {\n  e.preventDefault();\n\n  const newPerosn = {};\n\n  newPerosn.Name = nameInput.value;\n  newPerosn.Position = positionInput.value;\n  newPerosn.Office = officeSelect.value;\n  newPerosn.Age = ageInput.value;\n  newPerosn.Salary = `$${Number(salaryInput.value).toLocaleString()}`;\n\n  const newRow = document.createElement('tr');\n\n  for (const key in newPerosn) {\n    const newTd = document.createElement('td');\n\n    newTd.innerText = newPerosn[key];\n    newRow.append(newTd);\n  }\n\n  if (!newPerosn.Name.trim() || newPerosn.Name.length < 4) {\n    pushNotification('error',\n      'Name can\\'t be empty string or shorter than 4 characters');\n\n    return;\n  }\n\n  if (!newPerosn.Position.trim()) {\n    pushNotification('error', 'Position can\\'t be empty string');\n\n    return;\n  }\n\n  if (newPerosn.Age < minAge || newPerosn.Age > maxAge) {\n    pushNotification('error', 'Age must be greater 18 and bellow 90');\n\n    return;\n  }\n\n  if (Number(salaryInput.value < 0 || !salaryInput.value.trim())) {\n    pushNotification('error', 'Salary can\\'t be less than $0 or empty field');\n\n    return;\n  }\n\n  tableBody.append(newRow);\n  pushNotification('success', 'Person is successfully added to the table!');\n\n  form.reset();\n};\n\nbutton.addEventListener('click', buttonHandler);\n\nconst editCells = (e) => {\n  const target = e.target;\n  const cellIndex = target.cellIndex;\n  const originalText = target.innerHTML;\n  const newInput = document.createElement('input');\n  const newSelect = document.createElement('select');\n  const cellInput = cellIndex === 2 ? newSelect : newInput;\n\n  cellInput.className = 'cell-input';\n\n  const nameColumn = 0;\n  const officeColumn = 2;\n  const ageGolumn = 3;\n  const salaryColumn = 4;\n\n  target.innerText = '';\n\n  if (cellIndex === ageGolumn) {\n    cellInput.style.width = '30px';\n  }\n\n  if (cellIndex === officeColumn) {\n    cellInput.style.width = '60px';\n\n    newSelect.innerHTML = `\n      <option selected disabled=true\">Please choose the city</option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    `;\n\n    target.append(newSelect);\n    cellInput.focus();\n  } else {\n    cellInput.value = originalText;\n    target.append(cellInput);\n    cellInput.focus();\n  }\n\n  const cellEditHandler = () => {\n    if (cellIndex === officeColumn) {\n      if (cellInput.value === 'Please choose the city') {\n        target.innerText = originalText;\n\n        return;\n      }\n    }\n\n    if ((cellIndex === ageGolumn || cellIndex === salaryColumn)\n      && !+(cellInput.value.match(/\\d+/g).join(''))) {\n      e.target.innerText = originalText;\n\n      pushNotification('error',\n        'Only numbers for Age and Salary fields. Thank you!');\n\n      return;\n    };\n\n    if (cellIndex === ageGolumn\n      && (cellInput.value < minAge || cellInput.value > maxAge)) {\n      e.target.innerText = originalText;\n      pushNotification('error', 'Age must be greater 18 and bellow 90');\n\n      return;\n    }\n\n    if (cellIndex === salaryColumn) {\n      let cellInputValue = cellInput.value;\n\n      if (cellInput.value.includes('$')) {\n        cellInputValue = cellInput.value.match(/\\d+/g).join('');\n      }\n\n      if (Number(cellInputValue) < 0) {\n        target.innerText = originalText;\n        pushNotification('error', 'Salary can\\'t be less than $0');\n\n        return;\n      }\n\n      target.innerText = `$${Number(cellInputValue).toLocaleString()}`;\n    } else {\n      target.innerText = cellInput.value || originalText;\n    }\n\n    if (cellIndex === nameColumn && cellInput.value.length < 4) {\n      pushNotification('error',\n        'Name can\\'t be empty string or shorter than 4 characters');\n\n      target.innerText = originalText;\n\n      return;\n    }\n\n    if (!target.innerText.trim()) {\n      target.innerText = originalText;\n      pushNotification('error', 'Table data can\\'t be empty string');\n    }\n\n    cellInput.replaceWith(target.innerText);\n    cellInput.blur();\n  };\n\n  cellInput.onblur = cellEditHandler;\n\n  cellInput.onkeydown = (eve) => {\n    if (eve.key === 'Enter') {\n      cellEditHandler();\n    };\n  };\n};\n\ntableBody.addEventListener('dblclick', editCells);\n"]}